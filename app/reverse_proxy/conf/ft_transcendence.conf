user				nginx;
worker_processes	auto;

error_log			/var/log/nginx/error.log notice;
pid					/var/run/nginx.pid;

events
{
	worker_connections	1024;
}

http
{

	include					/etc/nginx/mime.types;
	default_type			application/octet-stream;
	log_format	main		'$remote_addr - $remote_user [$time_local] "$request" '
							'$status $body_bytes_sent "$http_referer" '
							'"$http_user_agent" "$http_x_forwarded_for"';
	access_log				/var/log/nginx/access.log  main;
	sendfile				on;
	keepalive_timeout		65;

	# Cache configuration
	proxy_cache_path		/var/lib/nginx/cache levels=1:2 keys_zone=backcache:8m max_size=50m;
	proxy_cache_key			"$scheme$request_method$host$request_uri$is_args$args";
	proxy_cache_valid		200 302 10m;
	proxy_cache_valid		404 1m;

	upstream frontend
	{
		server frontend:4000;
	}

	upstream backend
	{
		server backend:3000;
	}

	server
	{
		listen					443 ssl;
		server_name				localhost;
		server_name				ft_transcendence.fr;
		default_type			application/json;
		client_max_body_size	1M;

		# TLS Configuration
		ssl_protocols			TLSv1.2 TLSv1.3;
		ssl_certificate			/ssl/ft_transcendence.pem;
		ssl_certificate_key		/ssl/ft_transcendence.key;

		# Error management
		proxy_intercept_errors on;
		error_page 400 = @400;
		location @400 { return 400 '{"status":400, "message":"Bad request"}\n'; }
		error_page 401 = @401;
		location @401 { return 401 '{"status":401, "message":"Unauthorized"}\n'; }
		error_page 403 = @403;
		location @403 { return 403 '{"status":403, "message":"Forbidden"}\n'; }
		error_page 404 = @404;
		location @404 { return 404 '{"status":404, "message":"Not Found"}\n'; }

		# Buffering
		proxy_buffering				on;
		proxy_buffer_size			1k;
		proxy_buffers				24 4k;
		proxy_busy_buffers_size		8k;
		proxy_max_temp_file_size	2048m;
		proxy_temp_file_write_size	32k;

		# Frontend
		location /
		{
			proxy_pass http://frontend$request_uri;

			proxy_http_version 1.1;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
		    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;

		}

		# Backend
		location /api/
		{
			proxy_pass http://backend/;

			proxy_cache			backcache;
 		    proxy_cache_bypass 	$http_cache_control;
    		add_header			X-Proxy-Cache $upstream_cache_status;

			proxy_http_version 1.1;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
		    proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
		}

	}
}
