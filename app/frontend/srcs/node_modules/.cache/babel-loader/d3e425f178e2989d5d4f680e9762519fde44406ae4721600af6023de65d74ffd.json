{"ast":null,"code":"var _jsxFileName = \"/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyButton() {}\n_c = MyButton;\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Home;\nfunction App() {\n  _s();\n  let content;\n  let isLogged = false;\n  const [count, setCount] = useState(0);\n  let title = \"ft_transcendence\";\n  let description = \"Connect to play Pong versus other players and show everyone how good you are !\";\n  function handleClick() {\n    alert('You clicked me!');\n    setCount(count + 1);\n    isLogged = true;\n  }\n  if (isLogged === false) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MyButton\");\n$RefreshReg$(_c2, \"Home\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","MyButton","Home","App","content","isLogged","count","setCount","title","description","handleClick","alert"],"sources":["/frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction MyButton() {\n\n\n}\n\nfunction Home() {\n\n  return (\n    <div>\n      <h1>Home</h1>\n    </div>\n  );\n}\n\nfunction App() {\n\n  let content;\n  let isLogged : boolean = false;\n  const [count, setCount] = useState(0);\n  let title : string = \"ft_transcendence\";\n  let description : string = \"Connect to play Pong versus other players and show everyone how good you are !\";\n\n  function handleClick() {\n    alert('You clicked me!');\n    setCount(count + 1);\n    isLogged = true;\n  }\n\n  \n  if (isLogged === false)\n  {\n    return (\n      <div>\n        <h1>{title}</h1>\n        <h2>{description}</h2>\n      </div>\n    );\n  }\n  else\n  {\n    content = <Home/>\n  }\n\n  return (\n    <div>\n      {content}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC;AAEnB,SAASC,QAAQ,GAAG,CAGpB;AAAC,KAHQA,QAAQ;AAKjB,SAASC,IAAI,GAAG;EAEd,oBACE;IAAA,uBACE;MAAA,UAAI;IAAI;MAAA;MAAA;MAAA;IAAA;EAAK;IAAA;IAAA;IAAA;EAAA,QACT;AAEV;AAAC,MAPQA,IAAI;AASb,SAASC,GAAG,GAAG;EAAA;EAEb,IAAIC,OAAO;EACX,IAAIC,QAAkB,GAAG,KAAK;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,IAAIQ,KAAc,GAAG,kBAAkB;EACvC,IAAIC,WAAoB,GAAG,gFAAgF;EAE3G,SAASC,WAAW,GAAG;IACrBC,KAAK,CAAC,iBAAiB,CAAC;IACxBJ,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBD,QAAQ,GAAG,IAAI;EACjB;EAGA,IAAIA,QAAQ,KAAK,KAAK,EACtB;IACE,oBACE;MAAA,wBACE;QAAA,UAAKG;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAChB;QAAA,UAAKC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QAClB;EAEV,CAAC,MAED;IACEL,OAAO,gBAAG,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAE;EACnB;EAEA,oBACE;IAAA,UACGA;EAAO;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAlCQD,GAAG;AAAA,MAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}